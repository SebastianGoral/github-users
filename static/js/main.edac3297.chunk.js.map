{"version":3,"sources":["_Components/Input.tsx","_Components/SearchButton.tsx","_Components/InfoPanel.tsx","_Components/RepositoryBadge.tsx","_Api/api.ts","_State/Users/state.ts","_State/Users/thunks.ts","_Components/LoadingIndicator.tsx","_Components/NoElements.tsx","_Components/ExpandablePanel.tsx","_Components/SearchPanel.tsx","_State/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledInput","styled","input","Input","value","onChange","role","target","placeholder","StyledButton","button","SearchButton","onClick","isDisabled","disabled","Wrapper","div","InfoPanel","label","a","Text","Title","Description","Stars","StyledStar","StarIcon","RepositoryBadge","title","description","stars","url","href","githubApi","ky","create","prefixUrl","headers","getUsers","q","get","searchParams","per_page","json","then","items","map","login","getRepositoriesForUser","user","stargazers_count","full_name","html_url","usersSlice","createSlice","name","initialState","users","reducers","setUsers","state","payload","setUserRepositories","userToUpdate","find","repositories","usersSelector","usersReducer","reducer","usersActions","actions","loadUsers","dispatch","response","console","error","loadUserRepositories","mappedRepositories","fullName","split","slice","length","join","LoadingText","LoadingIndicator","NoElements","itemName","Container","RepositoryContainer","Label","IconWrapper","StyledUpIcon","KeyboardArrowUpIcon","StyledDownIcon","KeyboardArrowDownIcon","ExpandablePanel","userName","useState","isOpen","setIsOpen","isLoading","setIsLoading","useSelector","useDispatch","handleOpen","UsersContainer","SearchPanel","inputValue","setInputValue","infoLabel","setInfoLabel","alreadySearched","setAlreadySearched","handleClick","rootReducer","combineReducers","store","configureStore","Scene","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edac3297.chunk.js","sourcesContent":["import React, { ChangeEvent, FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledInput = styled.input`\n  margin: 20px;\n  height: 55px;\n  font-size: 18px;\n  background: #f2f2f2;\n  padding: 20px;\n  border: 1px solid #e8e8e8;\n`;\n\ninterface IProps {\n  value: string;\n  onChange: (value: string) => void;\n}\n\nexport const Input: FC<IProps> = ({ value, onChange }) => {\n  const handleChange = ({\n    target: { value },\n  }: ChangeEvent<HTMLInputElement>) => {\n    onChange(value);\n  };\n  return (\n    <StyledInput\n      role={\"input\"}\n      value={value}\n      onChange={handleChange}\n      placeholder={\"Enter username\"}\n    />\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst StyledButton = styled.button`\n  margin: 0 20px;\n  min-height: 55px;\n  font-size: 18px;\n  background: #4e9bd5;\n  border: none;\n  color: white;\n  border-radius: 4px;\n\n  &:disabled {\n    border: 1px solid #999999;\n    background-color: #cccccc;\n    color: #666666;\n  }\n`;\n\ninterface IProps {\n  onClick: () => void;\n  isDisabled: boolean;\n}\n\nexport const SearchButton: FC<IProps> = ({ onClick, isDisabled }) => {\n  return (\n    <StyledButton disabled={isDisabled} onClick={onClick}>\n      Search\n    </StyledButton>\n  );\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Wrapper = styled.div`\n  color: #686868;\n  font-size: 18px;\n  margin: 20px;\n`;\n\ninterface IProps {\n  label: string;\n}\n\nexport const InfoPanel: FC<IProps> = ({ label }) => {\n  return <Wrapper>Showing users for \"{label}\"</Wrapper>;\n};\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\nimport StarIcon from \"@material-ui/icons/Star\";\n\nconst Wrapper = styled.a`\n  text-decoration: none;\n  color: black;\n  &:active {\n    color: black;\n  }\n  min-height: 120px;\n  margin: 10px 0 0 20px;\n  background: #e0e0e0;\n  display: flex;\n  padding: 10px;\n  flex-direction: row;\n  justify-content: space-between;\n  cursor: pointer;\n`;\n\nconst Text = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Title = styled.div`\n  font-size: 22px;\n  font-weight: bold;\n  overflow: hidden;\n  max-width: 350px;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n`;\n\nconst Description = styled.div`\n  font-size: 18px;\n`;\n\nconst Stars = styled.div`\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  height: 20px;\n`;\n\nconst StyledStar = styled(StarIcon)`\n  && {\n    font-size: 25px;\n  }\n`;\n\ninterface IProps {\n  title?: string;\n  url?: string;\n  description?: string;\n  stars?: number;\n}\n\nexport const RepositoryBadge: FC<IProps> = ({\n  title = \"Repository title\",\n  description = \"Repository desc\",\n  stars,\n  url,\n}) => {\n  return (\n    <Wrapper href={url} target=\"_blank\">\n      <Text>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </Text>\n      <Stars>\n        <div data-testid={\"stars\"}>{stars}</div>\n        <StyledStar />\n      </Stars>\n    </Wrapper>\n  );\n};\n","import ky from \"ky\";\nimport { IUser } from \"../_State/Users/model\";\n\nexport const githubApi = ky.create({\n  prefixUrl: \"https://api.github.com/\",\n  headers: {\n    \"content-type\": \"application/json\",\n  },\n});\n\ninterface IUsersResponse {\n  items: IUser[];\n}\n\nexport const getUsers = (q: string): Promise<IUsersResponse> =>\n  githubApi\n    .get(\"search/users\", {\n      searchParams: { q, per_page: 5 },\n    })\n    .json()\n    .then((value) => {\n      const mappedItems = (value as IUsersResponse).items.map(({ login }) => ({\n        login,\n      }));\n      return { items: mappedItems } as IUsersResponse;\n    });\n\ninterface IRepositoryResponse {\n  stargazers_count: number;\n  description: string;\n  full_name: string;\n  html_url: string;\n}\n\nexport const getRepositoriesForUser = (\n  user: string\n): Promise<IRepositoryResponse[]> =>\n  githubApi\n    .get(`users/${user}/repos`)\n    .json()\n    .then((value) =>\n      (value as IRepositoryResponse[]).map(\n        ({\n          stargazers_count,\n          description,\n          full_name,\n          html_url,\n        }: IRepositoryResponse) => ({\n          stargazers_count,\n          description,\n          full_name,\n          html_url,\n        })\n      )\n    );\n","import { CaseReducer, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { IStateWithUsers, IUser, IUsersState } from \"./model\";\n\nconst initialState: IUsersState = {\n  users: [],\n};\n\nconst setUsers: CaseReducer<IUsersState, PayloadAction<IUser[]>> = (\n  state,\n  { payload }\n) => {\n  state.users = payload;\n};\n\nconst setUserRepositories: CaseReducer<IUsersState, PayloadAction<IUser>> = (\n  state,\n  { payload }\n) => {\n  const userToUpdate = state.users.find((user) => user.login === payload.login);\n  if (userToUpdate) {\n    userToUpdate.repositories = payload.repositories;\n  }\n};\n\nconst usersSlice = createSlice({\n  name: \"usersSlice\",\n  initialState,\n  reducers: {\n    setUsers,\n    setUserRepositories,\n  },\n});\n\nexport const usersSelector = (state: IStateWithUsers) => state.usersSlice;\n\nexport const usersReducer = usersSlice.reducer;\nexport const usersActions = usersSlice.actions;\n","import { Dispatch } from \"@reduxjs/toolkit\";\nimport { getRepositoriesForUser, getUsers } from \"../../_Api/api\";\nimport { usersActions } from \"./state\";\n\nexport const loadUsers = (q: string) => async (dispatch: Dispatch) => {\n  try {\n    const response = await getUsers(q);\n    dispatch(usersActions.setUsers(response.items));\n  } catch (e) {\n    console.error(\"Error occured\");\n  }\n};\n\nexport const loadUserRepositories =\n  (user: string) => async (dispatch: Dispatch) => {\n    try {\n      const repositories = await getRepositoriesForUser(user);\n      const mappedRepositories = repositories.map(\n        ({ stargazers_count, description, full_name, html_url }) => {\n          const fullName = full_name.split(\"/\");\n          const title = fullName.slice(1, fullName.length).join();\n          return {\n            stars: stargazers_count,\n            description,\n            title,\n            url: html_url,\n          };\n        }\n      );\n      dispatch(\n        usersActions.setUserRepositories({\n          login: user,\n          repositories: mappedRepositories,\n        })\n      );\n    } catch (e) {\n      console.error(\"Error occured\");\n    }\n  };\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nconst LoadingText = styled.div`\n  font-size: 20px;\n  color: #4e9bd5;\n  margin: auto;\n`;\n\nexport const LoadingIndicator = () => <LoadingText>Loading...</LoadingText>;\n","import React, { FC } from \"react\";\nimport styled from \"@emotion/styled\";\n\nconst Wrapper = styled.div`\n  color: darkred;\n  margin: auto;\n`;\n\ninterface IProps {\n  itemName: string;\n}\n\nexport const NoElements: FC<IProps> = ({ itemName }) => {\n  return <Wrapper>There is no {itemName}</Wrapper>;\n};\n","import React, { FC, useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport { RepositoryBadge } from \"./RepositoryBadge\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadUserRepositories } from \"../_State/Users/thunks\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nimport { IStateWithUsers } from \"../_State/Users/model\";\nimport { NoElements } from \"./NoElements\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\nconst Wrapper = styled.div`\n  background: #f2f2f2;\n  height: 55px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst RepositoryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Label = styled.div`\n  font-size: 18px;\n  margin-left: 10px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst IconWrapper = styled.div``;\n\nconst StyledUpIcon = styled(KeyboardArrowUpIcon)`\n  && {\n    font-size: 45px;\n  }\n`;\nconst StyledDownIcon = styled(KeyboardArrowDownIcon)`\n  && {\n    font-size: 45px;\n  }\n`;\ninterface IProps {\n  userName: string;\n}\n\nexport const ExpandablePanel: FC<IProps> = ({ userName }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const repositories = useSelector(\n    (state: IStateWithUsers) =>\n      state.usersSlice.users.find((user) => user.login === userName)\n        ?.repositories\n  );\n  const dispatch = useDispatch();\n\n  const handleOpen = async () => {\n    setIsOpen(!isOpen);\n    !isOpen && setIsLoading(true);\n    !isOpen && (await dispatch(loadUserRepositories(userName)));\n    setIsLoading(false);\n  };\n\n  return (\n    <Container>\n      <Wrapper>\n        <Label>{userName}</Label>\n        <IconWrapper onClick={handleOpen}>\n          {isOpen ? <StyledUpIcon /> : <StyledDownIcon />}\n        </IconWrapper>\n      </Wrapper>\n\n      {isLoading && <LoadingIndicator />}\n      {isOpen && repositories && repositories.length > 0 && !isLoading && (\n        <RepositoryContainer>\n          {repositories.map(({ description, title, stars, url }) => (\n            <RepositoryBadge\n              url={url}\n              title={title}\n              description={description}\n              stars={stars}\n            />\n          ))}\n        </RepositoryContainer>\n      )}\n      {isOpen && repositories && !(repositories.length > 0) && !isLoading && (\n        <NoElements itemName={\"repository\"} />\n      )}\n    </Container>\n  );\n};\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Input } from \"./Input\";\nimport { SearchButton } from \"./SearchButton\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { InfoPanel } from \"./InfoPanel\";\nimport { ExpandablePanel } from \"./ExpandablePanel\";\nimport { loadUsers } from \"../_State/Users/thunks\";\nimport { usersSelector } from \"../_State/Users/state\";\nimport { NoElements } from \"./NoElements\";\nimport { LoadingIndicator } from \"./LoadingIndicator\";\nconst Wrapper = styled.div`\n  width: 500px;\n  height: 700px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst UsersContainer = styled.div`\n  overflow-y: auto;\n`;\n\nexport const SearchPanel = () => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [infoLabel, setInfoLabel] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [alreadySearched, setAlreadySearched] = useState(false);\n  const { users } = useSelector(usersSelector);\n  const dispatch = useDispatch();\n\n  const handleClick = async () => {\n    setIsLoading(true);\n    setInfoLabel(inputValue);\n    setAlreadySearched(true);\n    await dispatch(loadUsers(inputValue));\n    setIsLoading(false);\n  };\n\n  return (\n    <Wrapper>\n      <Input value={inputValue} onChange={setInputValue} />\n      <SearchButton isDisabled={!inputValue} onClick={handleClick} />\n      {infoLabel && <InfoPanel label={infoLabel} />}\n      {isLoading && <LoadingIndicator />}\n      {users.length > 0 && !isLoading && (\n        <UsersContainer>\n          {users.map(({ login }) => (\n            <ExpandablePanel key={login} userName={login} />\n          ))}\n        </UsersContainer>\n      )}\n      {!(users.length > 0) && !isLoading && alreadySearched && (\n        <NoElements itemName=\"user\" />\n      )}\n    </Wrapper>\n  );\n};\n","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\nimport { usersReducer } from \"./Users/state\";\n\nconst rootReducer = combineReducers({\n  usersSlice: usersReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { SearchPanel } from \"./_Components/SearchPanel\";\nimport { store } from \"./_State/store\";\nimport { Provider } from \"react-redux\";\n\nconst Scene = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: gray;\n`;\nexport const App = () => {\n  return (\n    <Scene>\n      <Provider store={store}>\n        <SearchPanel />\n      </Provider>\n    </Scene>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}